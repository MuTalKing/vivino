/*
 * This file is generated by jOOQ.
 */
package db.jooq.vivino.tables.records;


import db.jooq.vivino.tables.Wines;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WinesRecord extends TableRecordImpl<WinesRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>vivino.wines.id</code>.
     */
    public WinesRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>vivino.wines.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>vivino.wines.name</code>.
     */
    public WinesRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>vivino.wines.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>vivino.wines.rate</code>.
     */
    public WinesRecord setRate(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>vivino.wines.rate</code>.
     */
    public String getRate() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Wines.WINES.ID;
    }

    @Override
    public Field<String> field2() {
        return Wines.WINES.NAME;
    }

    @Override
    public Field<String> field3() {
        return Wines.WINES.RATE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getRate();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getRate();
    }

    @Override
    public WinesRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public WinesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public WinesRecord value3(String value) {
        setRate(value);
        return this;
    }

    @Override
    public WinesRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WinesRecord
     */
    public WinesRecord() {
        super(Wines.WINES);
    }

    /**
     * Create a detached, initialised WinesRecord
     */
    public WinesRecord(String id, String name, String rate) {
        super(Wines.WINES);

        setId(id);
        setName(name);
        setRate(rate);
    }

    /**
     * Create a detached, initialised WinesRecord
     */
    public WinesRecord(db.jooq.vivino.tables.pojos.Wines value) {
        super(Wines.WINES);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setRate(value.getRate());
        }
    }
}
